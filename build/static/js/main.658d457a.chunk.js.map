{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","renderRow","rowNum","row","y","push","renderSquare","renderGrid","grid","x","i","this","squares","React","Component","Game","sort","sortState","state","sortDesc","setState","history","Array","fill","stepNumber","xIsNext","moveHistory","gameFinished","slice","calculateWinner","concat","length","step","status","current","winner","moves","map","hist","moveNum","playerAtMoveNum","playedMove","playedCol","Math","floor","desc","jumpTo","reverse","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.658d457a.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nconst numRowCol = 3;\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        key={i}\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  renderRow = (rowNum) => {\n    let row = [];\n    for (let y = 0; y < numRowCol; y++) {\n      row.push(this.renderSquare(rowNum * 3 + y));\n    }\n    return (\n      <div className=\"board-row\" key={\"row\" + rowNum}>\n        {row}\n      </div>\n    );\n  };\n\n  renderGrid = () => {\n    let grid = [];\n    for (let x = 0; x < numRowCol; x++) {\n      grid.push(this.renderRow(x));\n    }\n    return <div>{grid}</div>;\n  };\n\n  render() {\n    return <div>{this.renderGrid()}</div>;\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{ squares: Array(9).fill(null) }],\n      stepNumber: 0,\n      xIsNext: true,\n      moveHistory: [null],\n      sortDesc: false,\n      gameFinished: false,\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const moveHistory = this.state.moveHistory.slice(\n      0,\n      this.state.stepNumber + 1\n    );\n    const current = history[this.state.stepNumber];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: history.concat([{ squares: squares }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n      moveHistory: moveHistory.concat(i),\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0,\n    });\n  }\n\n  sort = () => {\n    let sortState = !this.state.sortDesc;\n    this.setState({ sortDesc: sortState });\n  };\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((hist, moveNum) => {\n      const playerAtMoveNum = moveNum % 2 === 1 ? \"X\" : \"O\";\n      const playedMove = this.state.moveHistory[moveNum];\n      const playedCol = Math.floor(playedMove / 3 + 1);\n      const playedRow = (playedMove % 3) + 1;\n      const desc = moveNum\n        ? \"Go to move #\" +\n          moveNum +\n          \" (\" +\n          playerAtMoveNum +\n          \": (\" +\n          playedCol +\n          \",\" +\n          playedRow +\n          \"))\"\n        : \"Go to game start\";\n      if (moveNum > 0 && moveNum === this.state.stepNumber) {\n        return (\n          <li key={moveNum} value={moveNum + 1}>\n            <button onClick={() => this.jumpTo(moveNum)}>\n              <strong>{desc}</strong>\n            </button>\n          </li>\n        );\n      } else {\n        return (\n          <li key={moveNum} value={moveNum + 1}>\n            <button onClick={() => this.jumpTo(moveNum)}>{desc}</button>\n          </li>\n        );\n      }\n    });\n\n    let sortState = \"Sort Decending\";\n    if (this.state.sortDesc) {\n      moves.reverse();\n      sortState = \"Sort Ascending\";\n    }\n\n    let status;\n    if (winner) {\n      status = \"Winner: \" + winner;\n    } else {\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n    }\n\n    return (\n      <div>\n        <div>\n          <h1>Tic Tac Toe</h1>\n        </div>\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board\n              squares={current.squares}\n              onClick={(i) => this.handleClick(i)}\n            />\n          </div>\n          <div className=\"game-info\">\n            <div>{status}</div>\n            <button onClick={() => this.sort()}>{sortState}</button>\n            <ol>{moves}</ol>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n"],"sourceRoot":""}